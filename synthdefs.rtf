{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red0\green0\blue187;
\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 SynthDef\cf0 (\cf3 \\sinosc\cf0 , \{ \cf2 |out=0, freq=440, gate=1, dur=1, amp=1|\cf0 \
	\cf2 var\cf0  oscs = \cf2 SinOsc\cf0 .ar(freq, gate);\
	\
	\
	\cf2 Out\cf0 .ar(out, \cf2 Pan2\cf0 .ar(oscs * \cf4 EnvGen\cf0 .kr(\cf4 Env\cf0 .linen(0.1, 0.5, 0.1), timeScale: dur, doneAction: 2)));\
\}).store;\
);\
\
(\
\cf2 SynthDef\cf0 (\cf3 \\sinmix\cf0 , \{\cf2 |out=0, freq=440, gate=1, dur=1, amp=1|\cf0 \
	\cf2 var\cf0  son = \cf2 SinOsc\cf0 .ar(freq, gate, \cf2 SinOsc\cf0 .ar(freq/2, gate)) * \cf4 EnvGen\cf0 .kr(\cf4 Env\cf0 .linen(0.01, 0.7, 0.025), timeScale: dur, doneAction: 2);\
	\cf2 Out\cf0 .ar(out, \cf2 Pan2\cf0 .ar(son *1));\
\}).store;\
);\
\
(\
\cf2 SynthDef\cf0 (\cf3 \\moog\cf0 , \{\cf2 |out=0, freq=440, gate=1, dur=1, amp=1|\cf0 \
	\cf2 var\cf0  moog = \cf2 MoogFF\cf0 .ar(\cf2 Pulse\cf0 .ar([freq/2, freq*2],[0.5, 0.5]), freq, 2);\
	\cf2 Out\cf0 .ar(out, \cf2 Pan2\cf0 .ar(moog * \cf2 EnvGen.kr(Env.linen(0.01, 0.7, 0.25), timeScale: dur, doneAction: 2)\cf0 ));\
\}).store;\
);\
\
(\
\cf2 SynthDef\cf0 (\cf3 \\sawsaw\cf0 , \{\cf2 |out=0, freq=440, gate=1, dur=1, amp=1|\cf0 \
	\cf2 var\cf0  saw = \cf2 Mix\cf0 .ar([\cf2 VarSaw\cf0 .ar(freq), \cf2 VarSaw\cf0 .ar(freq/2)]);\
	\cf2 Out\cf0 .ar(out, \cf2 Pan2\cf0 .ar(saw * \cf2 EnvGen.kr(Env.linen(0.1, 0.8, 0.1), timeScale: dur, doneAction: 2)\cf0 ));\
\}).store;\
);\
\
(\
\cf2 SynthDef\cf0 (\cf3 \\piano2\cf0 , \{ \cf2 |out=0, freq=440, gate=1, dur=1, amp=1|\cf0 \
	\cf2 var\cf0  oscs = [\cf2 Saw\cf0 .ar([freq, freq+3, freq+7], 0, 1),\
			   \cf2 Pulse\cf0 .ar([freq, freq+3, freq+7]),\
			   \cf2 MdaPiano\cf0 .ar(freq, gate, release: 0.59, stereo: 0.3, sustain: 0.25)\
			];\
			\
	\cf2 var\cf0  mix = \cf2 Mix\cf0 .ar(oscs);\
	\
	\
	\cf2 Out\cf0 .ar(out, mix * \cf2 EnvGen.kr(Env.linen(0.01, 0.9, 0.05), timeScale: dur, doneAction: 2)\cf0 );\
\}).store;\
);\
\
\
(\
	\cf2 SynthDef\cf0 (\cf3 \\guitar\cf0 , \{\cf2 |out, gate=1, freq=440, dur=1, amp=1|\cf0 \
		\cf2 var\cf0  oscs, env, input, output, sig, deltimes, delrd;\
		oscs = [\
			\cf2 Saw\cf0 .ar([freq, freq+3, freq+7], 0.7),\
			\cf2 Pulse\cf0 .ar([freq, freq+3, freq+7]),\
			\cf2 LFNoise0\cf0 .ar(freq/2, 0.55)\
		];\
		\
		input = \cf2 FreeVerb\cf0 .ar(\cf2 Mix\cf0 .ar(oscs), 0, 0.2, 0.2);\
		\
	     delrd = \cf2 LocalIn\cf0 .ar(4);\
	     output = input + delrd[[0,1]];\
\
		\cf5 // Cross-fertilise the four delay lines with each other:\cf0 \
	    sig = [output[0]+output[1]+delrd[2]+delrd[3],\
	           output[0]-output[1]+delrd[2]-delrd[3],\
	           output[0]+output[1]-delrd[2]-delrd[3],\
	           output[0]-output[1]-delrd[2]+delrd[3]];\
	    \
	    \
	    \cf5 // Attenutate the delayed signals so they decay:\cf0 \
	    sig = sig * [0.54, 0.37, 0.333, 0.3];\
         deltimes = [101, 143, 165, 177] * 0.001 - \cf2 ControlDur\cf0 .ir;\
         \cf2 LocalOut\cf0 .ar(\cf2 DelayC\cf0 .ar(sig, deltimes, deltimes));\
\
			\
		env = \cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0.01, 0.75, 1.0), gate, timeScale: dur, doneAction: 2);\
				\
		\cf2 Out\cf0 .ar(out, output * env * amp);\
	\}).send(s);\
)\
\
\
}